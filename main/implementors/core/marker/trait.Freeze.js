(function() {var implementors = {};
implementors["nebari"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/io/any/enum.AnyFile.html\" title=\"enum nebari::io::any::AnyFile\">AnyFile</a>","synthetic":true,"types":["nebari::io::any::AnyFile"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/io/any/enum.AnyFileManager.html\" title=\"enum nebari::io::any::AnyFileManager\">AnyFileManager</a>","synthetic":true,"types":["nebari::io::any::AnyFileManager"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/io/any/enum.AnyFileHandle.html\" title=\"enum nebari::io::any::AnyFileHandle\">AnyFileHandle</a>","synthetic":true,"types":["nebari::io::any::AnyFileHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/fs/struct.StdFile.html\" title=\"struct nebari::io::fs::StdFile\">StdFile</a>","synthetic":true,"types":["nebari::io::fs::StdFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/fs/struct.StdFileOpener.html\" title=\"struct nebari::io::fs::StdFileOpener\">StdFileOpener</a>","synthetic":true,"types":["nebari::io::fs::StdFileOpener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/fs/struct.StdFileManager.html\" title=\"struct nebari::io::fs::StdFileManager\">StdFileManager</a>","synthetic":true,"types":["nebari::io::fs::StdFileManager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/fs/struct.OpenStdFile.html\" title=\"struct nebari::io::fs::OpenStdFile\">OpenStdFile</a>","synthetic":true,"types":["nebari::io::fs::OpenStdFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/memory/struct.MemoryFile.html\" title=\"struct nebari::io::memory::MemoryFile\">MemoryFile</a>","synthetic":true,"types":["nebari::io::memory::MemoryFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/memory/struct.MemoryFileOpener.html\" title=\"struct nebari::io::memory::MemoryFileOpener\">MemoryFileOpener</a>","synthetic":true,"types":["nebari::io::memory::MemoryFileOpener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/memory/struct.MemoryFileManager.html\" title=\"struct nebari::io::memory::MemoryFileManager\">MemoryFileManager</a>","synthetic":true,"types":["nebari::io::memory::MemoryFileManager"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/memory/struct.OpenMemoryFile.html\" title=\"struct nebari::io::memory::OpenMemoryFile\">OpenMemoryFile</a>","synthetic":true,"types":["nebari::io::memory::OpenMemoryFile"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/io/struct.PathIds.html\" title=\"struct nebari::io::PathIds\">PathIds</a>","synthetic":true,"types":["nebari::io::PathIds"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"nebari/io/struct.RecreatedFile.html\" title=\"struct nebari::io::RecreatedFile\">RecreatedFile</a>&lt;'a&gt;","synthetic":true,"types":["nebari::io::RecreatedFile"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"nebari/struct.Error.html\" title=\"struct nebari::Error\">Error</a>","synthetic":true,"types":["nebari::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/enum.ErrorKind.html\" title=\"enum nebari::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["nebari::error::ErrorKind"]},{"text":"impl&lt;File&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.Roots.html\" title=\"struct nebari::Roots\">Roots</a>&lt;File&gt;","synthetic":true,"types":["nebari::roots::Roots"]},{"text":"impl&lt;File&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.ExecutingTransaction.html\" title=\"struct nebari::ExecutingTransaction\">ExecutingTransaction</a>&lt;File&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;File as <a class=\"trait\" href=\"nebari/io/trait.ManagedFile.html\" title=\"trait nebari::io::ManagedFile\">ManagedFile</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.ManagedFile.html#associatedtype.Manager\" title=\"type nebari::io::ManagedFile::Manager\">Manager</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::roots::ExecutingTransaction"]},{"text":"impl&lt;File&gt; !Freeze for <a class=\"struct\" href=\"nebari/struct.UnlockedTransactionTree.html\" title=\"struct nebari::UnlockedTransactionTree\">UnlockedTransactionTree</a>&lt;File&gt;","synthetic":true,"types":["nebari::roots::UnlockedTransactionTree"]},{"text":"impl&lt;'transaction, Root, File&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.LockedTransactionTree.html\" title=\"struct nebari::LockedTransactionTree\">LockedTransactionTree</a>&lt;'transaction, Root, File&gt;","synthetic":true,"types":["nebari::roots::LockedTransactionTree"]},{"text":"impl&lt;Root, File&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.TransactionTree.html\" title=\"struct nebari::TransactionTree\">TransactionTree</a>&lt;Root, File&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;File as <a class=\"trait\" href=\"nebari/io/trait.ManagedFile.html\" title=\"trait nebari::io::ManagedFile\">ManagedFile</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.ManagedFile.html#associatedtype.Manager\" title=\"type nebari::io::ManagedFile::Manager\">Manager</a> as <a class=\"trait\" href=\"nebari/io/trait.FileManager.html\" title=\"trait nebari::io::FileManager\">FileManager</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.FileManager.html#associatedtype.FileHandle\" title=\"type nebari::io::FileManager::FileHandle\">FileHandle</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::roots::TransactionTree"]},{"text":"impl !Freeze for <a class=\"enum\" href=\"nebari/enum.CompareAndSwapError.html\" title=\"enum nebari::CompareAndSwapError\">CompareAndSwapError</a>","synthetic":true,"types":["nebari::roots::CompareAndSwapError"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.Config.html\" title=\"struct nebari::Config\">Config</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::roots::Config"]},{"text":"impl&lt;Root, File&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.Tree.html\" title=\"struct nebari::Tree\">Tree</a>&lt;Root, File&gt;","synthetic":true,"types":["nebari::roots::Tree"]},{"text":"impl&lt;CallerError&nbsp;=&nbsp;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>&gt; !Freeze for <a class=\"enum\" href=\"nebari/enum.AbortError.html\" title=\"enum nebari::AbortError\">AbortError</a>&lt;CallerError&gt;","synthetic":true,"types":["nebari::roots::AbortError"]},{"text":"impl&lt;File&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.ThreadPool.html\" title=\"struct nebari::ThreadPool\">ThreadPool</a>&lt;File&gt;","synthetic":true,"types":["nebari::roots::ThreadPool"]},{"text":"impl&lt;File&gt; Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.TransactionLog.html\" title=\"struct nebari::transaction::TransactionLog\">TransactionLog</a>&lt;File&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;File as <a class=\"trait\" href=\"nebari/io/trait.ManagedFile.html\" title=\"trait nebari::io::ManagedFile\">ManagedFile</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.ManagedFile.html#associatedtype.Manager\" title=\"type nebari::io::ManagedFile::Manager\">Manager</a> as <a class=\"trait\" href=\"nebari/io/trait.FileManager.html\" title=\"trait nebari::io::FileManager\">FileManager</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.FileManager.html#associatedtype.FileHandle\" title=\"type nebari::io::FileManager::FileHandle\">FileHandle</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::transaction::log::TransactionLog"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.LogEntry.html\" title=\"struct nebari::transaction::LogEntry\">LogEntry</a>&lt;'a&gt;","synthetic":true,"types":["nebari::transaction::log::LogEntry"]},{"text":"impl&lt;Manager&gt; Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.TransactionManager.html\" title=\"struct nebari::transaction::TransactionManager\">TransactionManager</a>&lt;Manager&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Manager: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::transaction::manager::TransactionManager"]},{"text":"impl&lt;Manager&gt; Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.ManagedTransaction.html\" title=\"struct nebari::transaction::ManagedTransaction\">ManagedTransaction</a>&lt;Manager&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Manager: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::transaction::manager::ManagedTransaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.TransactionHandle.html\" title=\"struct nebari::transaction::TransactionHandle\">TransactionHandle</a>","synthetic":true,"types":["nebari::transaction::manager::TransactionHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.TreeLock.html\" title=\"struct nebari::transaction::TreeLock\">TreeLock</a>","synthetic":true,"types":["nebari::transaction::manager::TreeLock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.TreeLockHandle.html\" title=\"struct nebari::transaction::TreeLockHandle\">TreeLockHandle</a>","synthetic":true,"types":["nebari::transaction::manager::TreeLockHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.State.html\" title=\"struct nebari::transaction::State\">State</a>","synthetic":true,"types":["nebari::transaction::state::State"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.LogPosition.html\" title=\"struct nebari::transaction::LogPosition\">LogPosition</a>","synthetic":true,"types":["nebari::transaction::state::LogPosition"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/transaction/struct.TransactionId.html\" title=\"struct nebari::transaction::TransactionId\">TransactionId</a>","synthetic":true,"types":["nebari::transaction::TransactionId"]},{"text":"impl&lt;Index, ReducedIndex&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.BTreeEntry.html\" title=\"struct nebari::tree::BTreeEntry\">BTreeEntry</a>&lt;Index, ReducedIndex&gt;","synthetic":true,"types":["nebari::tree::btree_entry::BTreeEntry"]},{"text":"impl&lt;Index, ReducedIndex&gt; Freeze for <a class=\"enum\" href=\"nebari/tree/enum.BTreeNode.html\" title=\"enum nebari::tree::BTreeNode\">BTreeNode</a>&lt;Index, ReducedIndex&gt;","synthetic":true,"types":["nebari::tree::btree_entry::BTreeNode"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"nebari/tree/enum.KeyOperation.html\" title=\"enum nebari::tree::KeyOperation\">KeyOperation</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::btree_entry::KeyOperation"]},{"text":"impl&lt;EmbeddedIndex&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.VersionedByIdIndex.html\" title=\"struct nebari::tree::VersionedByIdIndex\">VersionedByIdIndex</a>&lt;EmbeddedIndex&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EmbeddedIndex: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::by_id::VersionedByIdIndex"]},{"text":"impl&lt;EmbeddedIndex&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.UnversionedByIdIndex.html\" title=\"struct nebari::tree::UnversionedByIdIndex\">UnversionedByIdIndex</a>&lt;EmbeddedIndex&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EmbeddedIndex: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::by_id::UnversionedByIdIndex"]},{"text":"impl&lt;EmbeddedStats&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.ByIdStats.html\" title=\"struct nebari::tree::ByIdStats\">ByIdStats</a>&lt;EmbeddedStats&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EmbeddedStats: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::by_id::ByIdStats"]},{"text":"impl&lt;EmbeddedIndexer&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.ByIdIndexer.html\" title=\"struct nebari::tree::ByIdIndexer\">ByIdIndexer</a>&lt;EmbeddedIndexer&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EmbeddedIndexer: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::by_id::ByIdIndexer"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/tree/struct.SequenceId.html\" title=\"struct nebari::tree::SequenceId\">SequenceId</a>","synthetic":true,"types":["nebari::tree::by_sequence::SequenceId"]},{"text":"impl&lt;Embedded&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.BySequenceIndex.html\" title=\"struct nebari::tree::BySequenceIndex\">BySequenceIndex</a>&lt;Embedded&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Embedded: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::by_sequence::BySequenceIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/tree/struct.BySequenceStats.html\" title=\"struct nebari::tree::BySequenceStats\">BySequenceStats</a>","synthetic":true,"types":["nebari::tree::by_sequence::BySequenceStats"]},{"text":"impl&lt;Index, ReducedIndex&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.Interior.html\" title=\"struct nebari::tree::Interior\">Interior</a>&lt;Index, ReducedIndex&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ReducedIndex: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::interior::Interior"]},{"text":"impl&lt;Index, ReducedIndex&gt; Freeze for <a class=\"enum\" href=\"nebari/tree/enum.Pointer.html\" title=\"enum nebari::tree::Pointer\">Pointer</a>&lt;Index, ReducedIndex&gt;","synthetic":true,"types":["nebari::tree::interior::Pointer"]},{"text":"impl&lt;Index&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.KeyEntry.html\" title=\"struct nebari::tree::KeyEntry\">KeyEntry</a>&lt;Index&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Index: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::key_entry::KeyEntry"]},{"text":"impl&lt;'a, T, Index&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.Modification.html\" title=\"struct nebari::tree::Modification\">Modification</a>&lt;'a, T, Index&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::modify::Modification"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/tree/enum.PersistenceMode.html\" title=\"enum nebari::tree::PersistenceMode\">PersistenceMode</a>","synthetic":true,"types":["nebari::tree::modify::PersistenceMode"]},{"text":"impl&lt;'a, T, Index&gt; Freeze for <a class=\"enum\" href=\"nebari/tree/enum.Operation.html\" title=\"enum nebari::tree::Operation\">Operation</a>&lt;'a, T, Index&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::modify::Operation"]},{"text":"impl&lt;'a, T, Index&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.CompareSwap.html\" title=\"struct nebari::tree::CompareSwap\">CompareSwap</a>&lt;'a, T, Index&gt;","synthetic":true,"types":["nebari::tree::modify::CompareSwap"]},{"text":"impl&lt;R, File&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.TreeRoot.html\" title=\"struct nebari::tree::TreeRoot\">TreeRoot</a>&lt;R, File&gt;","synthetic":true,"types":["nebari::tree::root::TreeRoot"]},{"text":"impl&lt;Root&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.State.html\" title=\"struct nebari::tree::State\">State</a>&lt;Root&gt;","synthetic":true,"types":["nebari::tree::state::State"]},{"text":"impl&lt;Root&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.ActiveState.html\" title=\"struct nebari::tree::ActiveState\">ActiveState</a>&lt;Root&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Root: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::state::ActiveState"]},{"text":"impl&lt;Index&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.UnversionedTreeRoot.html\" title=\"struct nebari::tree::UnversionedTreeRoot\">UnversionedTreeRoot</a>&lt;Index&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Index as <a class=\"trait\" href=\"nebari/tree/trait.EmbeddedIndex.html\" title=\"trait nebari::tree::EmbeddedIndex\">EmbeddedIndex</a>&gt;::<a class=\"associatedtype\" href=\"nebari/tree/trait.EmbeddedIndex.html#associatedtype.Indexer\" title=\"type nebari::tree::EmbeddedIndex::Indexer\">Indexer</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::unversioned::UnversionedTreeRoot"]},{"text":"impl&lt;EmbeddedIndex&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.VersionedTreeRoot.html\" title=\"struct nebari::tree::VersionedTreeRoot\">VersionedTreeRoot</a>&lt;EmbeddedIndex&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;EmbeddedIndex as <a class=\"trait\" href=\"nebari/tree/trait.EmbeddedIndex.html\" title=\"trait nebari::tree::EmbeddedIndex\">EmbeddedIndex</a>&gt;::<a class=\"associatedtype\" href=\"nebari/tree/trait.EmbeddedIndex.html#associatedtype.Indexer\" title=\"type nebari::tree::EmbeddedIndex::Indexer\">Indexer</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::versioned::VersionedTreeRoot"]},{"text":"impl&lt;Embedded&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.KeySequence.html\" title=\"struct nebari::tree::KeySequence\">KeySequence</a>&lt;Embedded&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Embedded: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::versioned::KeySequence"]},{"text":"impl&lt;Embedded&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.SequenceEntry.html\" title=\"struct nebari::tree::SequenceEntry\">SequenceEntry</a>&lt;Embedded&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Embedded: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::versioned::SequenceEntry"]},{"text":"impl&lt;Embedded&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.SequenceIndex.html\" title=\"struct nebari::tree::SequenceIndex\">SequenceIndex</a>&lt;Embedded&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Embedded: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::versioned::SequenceIndex"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/tree/enum.PageHeader.html\" title=\"enum nebari::tree::PageHeader\">PageHeader</a>","synthetic":true,"types":["nebari::tree::PageHeader"]},{"text":"impl&lt;Root, File&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.TreeFile.html\" title=\"struct nebari::tree::TreeFile\">TreeFile</a>&lt;Root, File&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;File as <a class=\"trait\" href=\"nebari/io/trait.ManagedFile.html\" title=\"trait nebari::io::ManagedFile\">ManagedFile</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.ManagedFile.html#associatedtype.Manager\" title=\"type nebari::io::ManagedFile::Manager\">Manager</a> as <a class=\"trait\" href=\"nebari/io/trait.FileManager.html\" title=\"trait nebari::io::FileManager\">FileManager</a>&gt;::<a class=\"associatedtype\" href=\"nebari/io/trait.FileManager.html#associatedtype.FileHandle\" title=\"type nebari::io::FileManager::FileHandle\">FileHandle</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::TreeFile"]},{"text":"impl&lt;'a, Manager&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.TransactableCompaction.html\" title=\"struct nebari::tree::TransactableCompaction\">TransactableCompaction</a>&lt;'a, Manager&gt;","synthetic":true,"types":["nebari::tree::TransactableCompaction"]},{"text":"impl&lt;I, Bytes&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.KeyRange.html\" title=\"struct nebari::tree::KeyRange\">KeyRange</a>&lt;I, Bytes&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Bytes: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::KeyRange"]},{"text":"impl Freeze for <a class=\"enum\" href=\"nebari/tree/enum.ScanEvaluation.html\" title=\"enum nebari::tree::ScanEvaluation\">ScanEvaluation</a>","synthetic":true,"types":["nebari::tree::ScanEvaluation"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.PagedWriter.html\" title=\"struct nebari::tree::PagedWriter\">PagedWriter</a>&lt;'a&gt;","synthetic":true,"types":["nebari::tree::PagedWriter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/tree/struct.U64Range.html\" title=\"struct nebari::tree::U64Range\">U64Range</a>","synthetic":true,"types":["nebari::tree::U64Range"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.BorrowedRange.html\" title=\"struct nebari::tree::BorrowedRange\">BorrowedRange</a>&lt;'a&gt;","synthetic":true,"types":["nebari::tree::BorrowedRange"]},{"text":"impl&lt;Index&gt; Freeze for <a class=\"struct\" href=\"nebari/tree/struct.ModificationResult.html\" title=\"struct nebari::tree::ModificationResult\">ModificationResult</a>&lt;Index&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Index: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::tree::ModificationResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"nebari/struct.ChunkCache.html\" title=\"struct nebari::ChunkCache\">ChunkCache</a>","synthetic":true,"types":["nebari::chunk_cache::ChunkCache"]},{"text":"impl&lt;M&gt; Freeze for <a class=\"struct\" href=\"nebari/struct.Context.html\" title=\"struct nebari::Context\">Context</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Freeze,&nbsp;</span>","synthetic":true,"types":["nebari::context::Context"]}];
implementors["xtask"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"xtask/enum.Commands.html\" title=\"enum xtask::Commands\">Commands</a>","synthetic":true,"types":["xtask::Commands"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"xtask/enum.Config.html\" title=\"enum xtask::Config\">Config</a>","synthetic":true,"types":["xtask::Config"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
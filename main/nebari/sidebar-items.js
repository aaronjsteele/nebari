initSidebarItems({"enum":[["AbortError","An error that could come from user code or Nebari."],["CompareAndSwapError","An error returned from `compare_and_swap()`."],["ErrorKind","An error from Nebari."]],"mod":[["io","IO abstractions for Nebari."],["transaction","ACID-compliant transaction log and manager."],["tree","Append-only B-Tree implementation"]],"struct":[["ArcBytes","An immutable buffer of bytes that can be cloned, sliced, and read into multiple parts using a single refernce to the underlying buffer."],["ChunkCache","A configurable cache that operates at the “chunk” level."],["Config","A database configuration used to open a database."],["Context","A shared environment for database operations."],["Error","An error from Nebari as well as an associated backtrace."],["ExecutingTransaction","An executing transaction. While this exists, no other transactions can execute across the same trees as this transaction holds."],["LockedTransactionTree","A locked transaction tree. This transactional tree is exclusively available for writing and reading to the thread that locks it."],["Roots","A multi-tree transactional B-Tree database."],["ThreadPool","A thread pool that commits transactions to disk in parallel."],["TransactionTree","A tree that is modifiable during a transaction."],["Tree","A named collection of keys and values."],["UnlockedTransactionTree","A tree that belongs to an [`ExecutingTransaction`]. All instances of this type must be dropped before the transaction can be committed."]],"trait":[["Vault","A provider of encryption for blocks of data."]]});